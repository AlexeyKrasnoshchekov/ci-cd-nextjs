# nginx.conf

# user  myapp;

# error_log  /var/log/nextjsapp/error.log warn;
# pid        /var/run/myapp.pid;

# events {
#   worker_connections  1024;
# }

# http {
#     # log_format json_analytics escape=json '{'

#     #                         '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution

#     #                         '"connection": "$connection", ' # connection serial number

#     #                         '"connection_requests": "$connection_requests", ' # number of requests made in connection

#     #                 '"pid": "$pid", ' # process pid

#     #                 '"request_id": "$request_id", ' # the unique request id

#     #                 '"request_length": "$request_length", ' # request length (including headers and body)

#     #                 '"remote_addr": "$remote_addr", ' # client IP

#     #                 '"remote_user": "$remote_user", ' # client HTTP username

#     #                 '"remote_port": "$remote_port", ' # client port

#     #                 '"time_local": "$time_local", '

#     #                 '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format

#     #                 '"request": "$request", ' # full path no arguments if the request

#     #                 '"request_uri": "$request_uri", ' # full path and arguments if the request

#     #                 '"args": "$args", ' # args

#     #                 '"status": "$status", ' # response status code

#     #                 '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client

#     #                 '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client

#     #                 '"http_referer": "$http_referer", ' # HTTP referer

#     #                 '"http_user_agent": "$http_user_agent", ' # user agent

#     #                 '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for

#     #                 '"http_host": "$http_host", ' # the request Host: header

#     #                 '"server_name": "$server_name", ' # the name of the vhost serving the request

#     #                 '"request_time": "$request_time", ' # request processing time in seconds with msec resolution

#     #                 '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests

#     #                 '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS

#     #                 '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers

#     #                 '"upstream_response_time": "$upstream_response_time", ' # time spent receiving upstream body

#     #                 '"upstream_response_length": "$upstream_response_length", ' # upstream response length

#     #                 '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable

#     #                 '"ssl_protocol": "$ssl_protocol", ' # TLS protocol

#     #                 '"ssl_cipher": "$ssl_cipher", ' # TLS cipher

#     #                 '"scheme": "$scheme", ' # http or https

#     #                 '"request_method": "$request_method", ' # request method

#     #                 '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0

#     #                 '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise

#     #                 '"gzip_ratio": "$gzip_ratio", '

#     #                 '"http_cf_ray": "$http_cf_ray",'

#     #                 '}';

#     # access_log /var/log/nextjsapp/json_access.log json_analytics;

#     # server {
#     #     listen 127.0.0.1:8081;
#     #     server_name localhost;

#     #     location /nginx_status {
#     #         stub_status;
#     #         allow 127.0.0.1;
#     #         allow 185.40.30.86;
#     #         deny all;
#     #     }
#     # }

#     server {
#         listen       8889;
#         server_name  localhost;

#         #charset koi8-r;
#         #access_log  /var/log/nginx/log/host.access.log  main;

#         location / {
#             root   /usr/share/nginx/html;
#             index  index.html index.htm;
#         }

#         #error_page  404              /404.html;

#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   /usr/share/nginx/html;
#         }

#         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#         #
#         #location ~ \.php$ {
#         #    proxy_pass   http://127.0.0.1;
#         #}

#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#         #    include        fastcgi_params;
#         #}

#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#     }
# }

error_log  /var/log/myapp/error.log warn;

http {

    log_format json_analytics escape=json '{'

                            '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution

                            '"connection": "$connection", ' # connection serial number

                            '"connection_requests": "$connection_requests", ' # number of requests made in connection

                    '"pid": "$pid", ' # process pid

                    '"request_id": "$request_id", ' # the unique request id

                    '"request_length": "$request_length", ' # request length (including headers and body)

                    '"remote_addr": "$remote_addr", ' # client IP

                    '"remote_user": "$remote_user", ' # client HTTP username

                    '"remote_port": "$remote_port", ' # client port

                    '"time_local": "$time_local", '

                    '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format

                    '"request": "$request", ' # full path no arguments if the request

                    '"request_uri": "$request_uri", ' # full path and arguments if the request

                    '"args": "$args", ' # args

                    '"status": "$status", ' # response status code

                    '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client

                    '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client

                    '"http_referer": "$http_referer", ' # HTTP referer

                    '"http_user_agent": "$http_user_agent", ' # user agent

                    '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for

                    '"http_host": "$http_host", ' # the request Host: header

                    '"server_name": "$server_name", ' # the name of the vhost serving the request

                    '"request_time": "$request_time", ' # request processing time in seconds with msec resolution

                    '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests

                    '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS

                    '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers

                    '"upstream_response_time": "$upstream_response_time", ' # time spent receiving upstream body

                    '"upstream_response_length": "$upstream_response_length", ' # upstream response length

                    '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable

                    '"ssl_protocol": "$ssl_protocol", ' # TLS protocol

                    '"ssl_cipher": "$ssl_cipher", ' # TLS cipher

                    '"scheme": "$scheme", ' # http or https

                    '"request_method": "$request_method", ' # request method

                    '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0

                    '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise

                    '"gzip_ratio": "$gzip_ratio", '

                    '"http_cf_ray": "$http_cf_ray",'

                    '}';

    access_log /var/log/myapp/json_access.log json_analytics;

    server {
        listen 8889;
        server_name localhost;  # Replace with your domain name
         # root /var/www/mywebsite;  # Replace with the path to your static files

        # index index.html;  # Default file to serve
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    

        # location / {
            
        # }

        location /nginx_status {
           stub_status on;
           allow 127.0.0.1;
           allow all;
       }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}





